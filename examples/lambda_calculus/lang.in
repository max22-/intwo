symbol

lambda,	yellow		: 2
a,		red			: 2
@,		Purple		: 2

d1,		RoyalBlue1	: 2
d2,		RoyalBlue1	: 2
d3,		RoyalBlue1	: 2
d?,		RoyalBlue1	: 2

D_,		yellow		: 2
D_1,	yellow		: 2
D_2,	yellow		: 2
D_3,	yellow		: 2
D_13,	yellow		: 2
D_23,	yellow		: 2
D_12,	yellow		: 2
D_123,	yellow		: 2

D_?,	yellow		: 2
D_1?,	yellow		: 2
D_2?,	yellow		: 2
D_3?,	yellow		: 2
D_13?,	yellow		: 2
D_23?,	yellow		: 2
D_12?,	yellow		: 2
D_123?,	yellow		: 2

go,		white		: 1
*,		limegreen	: 0


rule


// lambda >< a =================================================================

lambda(X,Y) >< a(Y, X) .

// @ >< a ======================================================================

a(V,@(@(A1,B1),V)) >< @(A1,B1) .

// delta >< lambda =============================================================

D_(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_?(A1,A2), d?(B1,B2)) .
D_1(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_1?(A1,A2), d?(B1,B2)) .
D_2(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_2?(A1,A2), d?(B1,B2)) .
D_3(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_3?(A1,A2), d?(B1,B2)) .
D_12(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_12?(A1,A2), d?(B1,B2)) .
D_13(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_13?(A1,A2), d?(B1,B2)) .
D_23(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_23?(A1,A2), d?(B1,B2)) .
D_123(lambda(A1,B1), lambda(A2,B2)) >< lambda(D_123?(A1,A2), d?(B1,B2)) .

// delta_I >< delta_i (annihilation) ===========================================

D_1(A0, B0) >< d1(A0, B0) .
D_12(A0, B0) >< d1(A0, B0) .
D_13(A0, B0) >< d1(A0, B0) .
D_1?(A0, B0) >< d1(A0, B0) .
D_123(A0, B0) >< d1(A0, B0) .

D_2(A0, B0) >< d2(A0, B0) .
D_12(A0, B0) >< d2(A0, B0) .
D_23(A0, B0) >< d2(A0, B0) .
D_2?(A0, B0) >< d2(A0, B0) .
D_123(A0, B0) >< d2(A0, B0) .

D_3(A0, B0) >< d3(A0, B0) .
D_13(A0, B0) >< d3(A0, B0) .
D_23(A0, B0) >< d3(A0, B0) .
D_3?(A0, B0) >< d3(A0, B0) .
D_123(A0, B0) >< d3(A0, B0) .

D_?(A0, B0) >< d?(A0, B0) .
D_1?(A0, B0) >< d?(A0, B0) .
D_2?(A0, B0) >< d?(A0, B0) .
D_3?(A0, B0) >< d?(A0, B0) .
D_12?(A0, B0) >< d?(A0, B0) .
D_13?(A0, B0) >< d?(A0, B0) .
D_23?(A0, B0) >< d?(A0, B0) .

// a >< delta ==================================================================

a(V,@(d1(X,Z),V)) >< d1(X,Z) .
a(V,@(d2(X,Z),V)) >< d2(X,Z) .
a(V,@(d3(X,Z),V)) >< d3(X,Z) .
a(V,@(d?(X,Z),V)) >< d?(X,Z) .

// delta_I >< delta_i (commutation) ============================================

d1(D_(A1,B1), D_(A2,B2)) >< D_(d1(A1,A2), d1(B1,B2)) .
d1(D_2(A1,B1), D_2(A2,B2)) >< D_2(d1(A1,A2), d1(B1,B2)) .
d1(D_3(A1,B1), D_3(A2,B2)) >< D_3(d1(A1,A2), d1(B1,B2)) .
d1(D_23(A1,B1), D_23(A2,B2)) >< D_23(d1(A1,A2), d1(B1,B2)) .

d1(D_?	(A1,B1), D_?	(A2,B2)) >< D_?		(d1(A1,A2), d1(B1,B2)) .
d1(D_2?	(A1,B1), D_2?	(A2,B2)) >< D_2?	(d1(A1,A2), d1(B1,B2)) .
d1(D_3?	(A1,B1), D_3?	(A2,B2)) >< D_3?	(d1(A1,A2), d1(B1,B2)) .
d1(D_23?(A1,B1), D_23?	(A2,B2)) >< D_23?	(d1(A1,A2), d1(B1,B2)) .

d2(D_(A1,B1), D_(A2,B2)) >< D_(d2(A1,A2), d2(B1,B2)) .
d2(D_1(A1,B1), D_1(A2,B2)) >< D_1(d2(A1,A2), d2(B1,B2)) .
d2(D_3(A1,B1), D_3(A2,B2)) >< D_3(d2(A1,A2), d2(B1,B2)) .
d2(D_13(A1,B1), D_13(A2,B2)) >< D_13(d2(A1,A2), d2(B1,B2)) .

d3(D_(A1,B1), D_(A2,B2)) >< D_(d3(A1,A2), d3(B1,B2)) .
d3(D_1(A1,B1), D_1(A2,B2)) >< D_1(d3(A1,A2), d3(B1,B2)) .
d3(D_2(A1,B1), D_2(A2,B2)) >< D_2(d3(A1,A2), d3(B1,B2)) .
d3(D_12(A1,B1), D_12(A2,B2)) >< D_12(d3(A1,A2), d3(B1,B2)) .

d?(D_(A1,B1), D_(A2,B2)) >< D_(d?(A1,A2), d?(B1,B2)) .
d?(D_1(A1,B1), D_1(A2,B2)) >< D_1(d?(A1,A2), d?(B1,B2)) .
d?(D_2(A1,B1), D_2(A2,B2)) >< D_2(d?(A1,A2), d?(B1,B2)) .
d?(D_3(A1,B1), D_3(A2,B2)) >< D_3(d?(A1,A2), d?(B1,B2)) .

d?(D_12(A1,B1), D_12(A2,B2)) >< D_12(d?(A1,A2), d?(B1,B2)) .
d?(D_13(A1,B1), D_13(A2,B2)) >< D_13(d?(A1,A2), d?(B1,B2)) .
d?(D_23(A1,B1), D_23(A2,B2)) >< D_23(d?(A1,A2), d?(B1,B2)) .
d?(D_123(A1,B1), D_123(A2,B2)) >< D_123(d?(A1,A2), d?(B1,B2)) .


// @ >< delta_I ================================================================

D_(A,B) >< @(D_(a(X,A),a(Y,B)),D_(X,Y)) .

D_1(A,B) >< @(D_1(a(X,A),a(Y,B)),D_1(X,Y)) .
D_2(A,B) >< @(D_2(a(X,A),a(Y,B)),D_2(X,Y)) .
D_3(A,B) >< @(D_3(a(X,A),a(Y,B)),D_3(X,Y)) .

D_12(A,B) >< @(D_12(a(X,A),a(Y,B)),D_12(X,Y)) .
D_13(A,B) >< @(D_13(a(X,A),a(Y,B)),D_13(X,Y)) .
D_23(A,B) >< @(D_23(a(X,A),a(Y,B)),D_23(X,Y)) .
D_123(A,B) >< @(D_123(a(X,A),a(Y,B)),D_123(X,Y)) .

D_?(A,B) >< @(D_?(a(X,A),a(Y,B)),D_?(X,Y)) .
D_1?(A,B) >< @(D_1?(a(X,A),a(Y,B)),D_1?(X,Y)) .
D_2?(A,B) >< @(D_2?(a(X,A),a(Y,B)),D_2?(X,Y)) .
D_3?(A,B) >< @(D_3?(a(X,A),a(Y,B)),D_3?(X,Y)) .

D_12?(A,B) >< @(D_12?(a(X,A),a(Y,B)),D_12?(X,Y)) .
D_13?(A,B) >< @(D_13?(a(X,A),a(Y,B)),D_13?(X,Y)) .
D_23?(A,B) >< @(D_23?(a(X,A),a(Y,B)),D_23?(X,Y)) .


// décodage ====================================================================

go(lambda(U,V)) >< lambda(go(U),go(V)) .
go(D_(U,V)) >< D_(go(U),go(V)) .
go(R) >< @(go(a(V,R)),go(V)) .
go(R) >< go(R) .


// duplication de l'étoile =====================================================

D_(*,*) >< * .
D_1(*,*) >< * .
D_2(*,*) >< * .
D_3(*,*) >< * .
D_12(*,*) >< * .
D_13(*,*) >< * .
D_23(*,*) >< * .
D_123(*,*) >< * .

D_?(*,*) >< * .
D_1?(*,*) >< * .
D_2?(*,*) >< * .
D_3?(*,*) >< * .
D_12?(*,*) >< * .
D_13?(*,*) >< * .
D_23?(*,*) >< * .



net

// (delta)2
// --------

// go(result) --
// @( lambda(@(Z1,Z2),D_(Z2,Z1)) , lambda(lambda(@(X1,@(X2,Y)), Y), D_(X2,X1)))


// (delta)delta
// ============

// a(lambda(A, D_(B, a(B, A))), dédé) -- lambda(C, D_(D, a(D, C)))


// Didier
// ------

// a(lambda(A, B), C) -- lambda(D, D_(a(lambda(E, E), F), a(F, D)))
// a(lambda(C, a(B, A)), result) -- lambda(G, D_(a(lambda(H, H), I), a(I, G)))

// D_(a(lambda(A, A), B), a(B, result)) -- lambda(C, a(d1(lambda(D, D), E), D_1(E, C)))

// sharing graph (result) et sa version non partagée (resultbis)

// a(d2(lambda(A, A), B), D_2(B, D_1(C, result))) -- d1(lambda(D, D), C)

// result --
// @(@(lambda(A, A), @(lambda(B, B), lambda(C, C))), @(@(lambda(D, D), @(lambda(E, E), lambda(F, F))), lambda(G, G)))








// Nasty
// -----

// a(lambda(F, D_(a(G, H), a(H, F))) , E) --
// lambda(A, D_(a(lambda(B, epsilon), D), a(lambda(D, B), A)))
// méchant -- lambda(E, G)


// Pedro
// -----

// a(A, D_1(B, C)) -- d1(D, lambda(B, D))
// result -- lambda(C, A)
	
// Marc
// ----

// marc -- lambda(G, F)
// a(lambda(A, epsilon), C) -- lambda(D, D_(E, a(E, D)))
// a(F, G) -- lambda(C, A)


// François
// --------

// a(lambda(A, a(B, A)), C) -- lambda(D, D_(E, a(E, a(F, D))))
// a(G, H) -- lambda(C, D_(B, F))
// françois -- lambda(H, G)


// Marcel (asgu p. 9 figure 2.1) => (z)z
// ------

// a(A, B) -- lambda(C, D_(D, a(D, C)))
// a(lambda(B, a(z, A)), marcel) -- lambda(F, a(lambda(G, G), F))


// Lamping (asgu bas de la p.12) => I
// -------

// a(A, B) -- lambda(C, D_(a(lambda(D, D), E), a(E, C)))
// a(lambda(B, a(lambda(F, F), A)), S) --
// lambda(G, D_(a(lambda(H, H), I), a(I, G)))


// Stefano1 (asgu exercice 301 p.34) => ( (x)x ) (y)y
// --------

// a(lambda(A, a(B, C)),D) --
// lambda(E, D_(a(lambda(F, epsilon), H), a(lambda(H, F), E)))
// a(lambda(lambda(lambda(I, J), K), D_(a(J, L), a(K, a(L, I)))), T) --
// lambda(D, a(lambda(C, B), a(X, a(Y, A))))


D_2(B, a(B, D_1(C, T))) -- d1(d2(Y, X), C)





// Stefano2 (asgu exercice 301 p.34) => ( (x)y ) (x)y
// --------

// a(lambda(A, a(B, C)),D) --
// lambda(E, D_(a(lambda(F, F), G), a(lambda(G, epsilon), E)))
// a(lambda(lambda(lambda(I, J), K), D_(a(J, L), a(K, a(L, I)))), T) --
// lambda(D, a(lambda(C, B), a(X, a(Y, A))))


// Jean-Jacques (asgu p.11) avec n=4 et m=3 (7 beta-reductions)
// ------------

// a(A, B) -- lambda(C, D_(D_(D_(B1,D), E), a(E, a(D, a(B1, C)))))
// a(lambda(B, a(z, A)), p) -- lambda(G, D_(D_(D_(H, I), J), a(lambda(K, K), a(J, a(I, a(H, G))))))









